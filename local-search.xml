<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kubernetes Pod知识图谱</title>
    <link href="/2019/02/28/k8s%20pod%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    <url>/2019/02/28/k8s%20pod%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/k8s-pod.svg" alt="k8s-pod"></p><blockquote><p>参考 <em>《kubernetes 权威指南》</em></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>K8S</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git常用操作总结</title>
    <link href="/2017/02/28/2020-12-10-git%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <url>/2017/02/28/2020-12-10-git%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="批量删除Git分支"><a href="#批量删除Git分支" class="headerlink" title="批量删除Git分支"></a>批量删除Git分支</h2><h3 id="删本地分支"><a href="#删本地分支" class="headerlink" title="删本地分支"></a>删本地分支</h3><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git branch -D 本地分支强制删除命令中，实现<strong>批量删除包含keyname字符串的本地分支</strong></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">git branch |<span class="hljs-type">grep</span> &#x27;keyname&#x27; | <span class="hljs-type">xargs</span> git branch -D<br></code></pre></td></tr></table></figure><h4 id="删远程分支"><a href="#删远程分支" class="headerlink" title="删远程分支"></a>删远程分支</h4><p>git branch 输出分支列表， 通过管道过滤出包含关键词 keyname分支名的分支，传递给git push origin –delete 远端分支强制删除命令中，实现<strong>批量删除包含keyname字符串的远端分支</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">git branch |<span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;keyname&#x27;</span> | xargs git <span class="hljs-keyword">push</span> origin --<span class="hljs-keyword">delete</span><br></code></pre></td></tr></table></figure><h2 id="误删分支找回"><a href="#误删分支找回" class="headerlink" title="误删分支找回"></a>误删分支找回</h2><p>git reflog查看所有分支的commit记录,根据commit记录创建分支</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">git branch <span class="hljs-keyword">new</span><span class="hljs-type">BranchName</span> HEAD@&#123;**&#125;<br></code></pre></td></tr></table></figure><p>切换到新分支后，push到远端即可恢复远端分支</p><p><img src="/img/findback-branch.png" alt="找回分支"></p><h2 id="Git快捷命令配置（别名）"><a href="#Git快捷命令配置（别名）" class="headerlink" title="Git快捷命令配置（别名）"></a>Git快捷命令配置（别名）</h2><p>git bash窗口中vi /etc/bash.bashrc，在尾部添加如下代码</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vhdl"><span class="hljs-keyword">alias</span> gst=<span class="hljs-symbol">&#x27;git</span> status&#x27;<br><span class="hljs-keyword">alias</span> gdiff=<span class="hljs-symbol">&#x27;git</span> diff&#x27;<br><span class="hljs-keyword">alias</span> gadd=<span class="hljs-symbol">&#x27;git</span> add&#x27;<br><span class="hljs-keyword">alias</span> gci=<span class="hljs-symbol">&#x27;git</span> commit -m <span class="hljs-string">&quot;hello world&quot;</span>&#x27;<br><span class="hljs-keyword">alias</span> gthis=<span class="hljs-symbol">&#x27;git</span> rev-parse <span class="hljs-comment">--abbrev-ref HEAD&#x27;</span><br><span class="hljs-keyword">alias</span> gpush=<span class="hljs-symbol">&#x27;git</span> push origin `gthis`&#x27;<br><span class="hljs-keyword">alias</span> gco=<span class="hljs-symbol">&#x27;git</span> checkout&#x27;<br><span class="hljs-keyword">alias</span> gbr=<span class="hljs-symbol">&#x27;git</span> branch&#x27;<br><span class="hljs-keyword">alias</span> gname=<span class="hljs-symbol">&#x27;vi</span> /etc/bash.bashrc&#x27;<br></code></pre></td></tr></table></figure><p>保存后重启bash窗口，生效快捷命令映射</p><p>若保存时，遇到[/etc/bashrc Permission denied，则用管理员权限打开git bash重试即可</p><p><img src="/img/bash-run.png" alt="管理员权限运行bash"></p><h2 id="记录Git用户名密码"><a href="#记录Git用户名密码" class="headerlink" title="记录Git用户名密码"></a>记录Git用户名密码</h2><p>git 默认每次pull等操作时要求输入密码，比较麻烦，可通过如下命令永久保存密码，再输入一次后就无需输入了。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">git <span class="hljs-built_in">config</span> credential.helper store<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
